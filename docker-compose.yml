version: '3'
services:
 # Define the Flask web application
 file_input:
   # Build the Dockerfile that is in the web directory
   build: ./file_input
   # Always restart the container regardless of the exit status; try and restart the container indefinitely
   restart: always
   # Expose port 8000 to other containers (not to the host of the machine)
   ports:
     - "5000:5000"
   # Mount the web directory within the container at /home/flask/app/web
   volumes:
     - sharedvol:/file_input/data
   # Don't create this container until the redis and postgres containers (below) have been created
#   depends_on:
#     - extract_data
#
#   # Link the redis and postgres containers together so they can talk to one another
#   links:
#     - extract_data

   # Pass environment variables to the flask container (this debug level lets you see more useful information)
   environment:
     FLASK_DEBUG: 1

 # Define the redis Docker container
 extract_data:
#   image: python:3
   build: ./extract_data
   ports:
     - "8000:8000"
#   tty: true
   volumes:
     - sharedvol:/extract_data/data

 classify:
#    image: python:3
    build: ./classify
    ports:
      - "9000:9000"
    volumes:
      - sharedvol:/classify/data

volumes:
  sharedvol: